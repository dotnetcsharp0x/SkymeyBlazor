@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using SkymeyBlazor.Components.Layout.TopMenu
@using SkymeyBlazor.Model.Services
@using Skymey_main_lib.Models.JWT
@inherits LayoutComponentBase
@inject ProtectedLocalStorage ProtectedLocalStore
@inject ProtectedSessionStorage protectedSessionStorage
@inject UserService UserRepository



<div class="page container-fluid">
    <div class="px-4 pt-2 ">
        <NavMenu />
    </div>

    <main class="row">
        <div class="container-fluid">
            <div class="row">
                <div class="px-4 pt-2 float-end justify-content-end">
                    <TopMenu />
                </div>

                <article class="content px-4">
                    @Body
                </article>
            </div>
        </div>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
@code {
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("MainLayout");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var AccessToken = await ProtectedLocalStore.GetAsync<string>("AccessToken");
            var RefreshToken = await ProtectedLocalStore.GetAsync<string>("RefreshToken");
            if (RefreshToken.Value != null)
            {
                AuthenticatedResponse aresp = new AuthenticatedResponse();
                aresp.AccessToken = AccessToken.Value;
                aresp.RefreshToken = RefreshToken.Value;
                Console.WriteLine(aresp.AccessToken);
                AuthenticatedResponse a = await UserRepository.Refresh(aresp);
                Console.WriteLine(a.AccessToken);
                await ProtectedLocalStore.SetAsync("RefreshToken", a.RefreshToken);
                await ProtectedLocalStore.SetAsync("AccessToken", a.AccessToken);
                StateHasChanged();
            }
        }
    }
}